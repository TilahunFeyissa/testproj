name: Build Android AAB

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # 3. Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 5. Cache Gradle
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # 6. Fetch secrets from Infisical
      - name: Fetch secrets from Infisical
        uses: Infisical/secrets-action@v1.0.14
        with:
          method: 'universal'
          client-id: ${{ secrets.INFISICAL_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          domain: 'https://app.infisical.com' # use https://eu.infisical.com if EU region
          env-slug: dev
          project-slug: 'test-project-fzug'
          export-type: file
          file-output-path: /.env
          recursive: true
          include-imports: true
          secret-path: /

      # 7. Load env vars from .env
      - name: Load env from Infisical
        run: |
          FILE_PATH="$(pwd)/.env"
          if [ -f "$FILE_PATH" ]; then
            echo "Loading $FILE_PATH"
            set -a
            source "$FILE_PATH"
            set +a
          else
            echo "Env file not found at $FILE_PATH"
            ls -lah
            exit 1
          fi
      - name: Print .env content (sanitized)
        run: |
          head -n 20 .env
  
      - name: Debug env vars
        run: |
           echo "ANDROID_KEYSTORE_BASE64 length: ${#ANDROID_KEYSTORE_BASE64}"
           echo "ANDROID_KEYSTORE_PASSWORD length: ${#ANDROID_KEYSTORE_PASSWORD}"
           echo "ANDROID_KEY_ALIAS: $ANDROID_KEY_ALIAS"
           echo "ANDROID_KEY_PASSWORD length: ${#ANDROID_KEY_PASSWORD}"

      - name: Decode keystore
        run: |
          mkdir -p android/app

          # Clean secrets: strip quotes, spaces, CRLF
          ANDROID_KEYSTORE_BASE64=$(echo "$ANDROID_KEYSTORE_BASE64" | tr -d '\r\n' | tr -d '"')
          ANDROID_KEYSTORE_PASSWORD=$(echo "$ANDROID_KEYSTORE_PASSWORD" | tr -d '\r\n' | tr -d '"')
          ANDROID_KEY_PASSWORD=$(echo "$ANDROID_KEY_PASSWORD" | tr -d '\r\n' | tr -d '"')

          echo "Keystore base64 length: ${#ANDROID_KEYSTORE_BASE64}"
          echo "Password length: ${#ANDROID_KEYSTORE_PASSWORD}"

          # Decode into keystore file
          printf "%s" "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/app/my-release-key.jks
          ls -lh android/app/my-release-key.jks

          # Validate file
          keytool -list -v \
            -keystore android/app/my-release-key.jks \
            -storepass "$ANDROID_KEYSTORE_PASSWORD" || exit 1

      # 9. Build AAB
      - name: Build AAB
        run: |
          cd android
          chmod +x gradlew
          ./gradlew clean bundleRelease \
            -Pandroid.injected.signing.store.file=my-release-key.jks \
            -Pandroid.injected.signing.store.password="$ANDROID_KEYSTORE_PASSWORD" \
            -Pandroid.injected.signing.key.alias="$ANDROID_KEY_ALIAS" \
            -Pandroid.injected.signing.key.password="$ANDROID_KEY_PASSWORD" \
            --stacktrace --info
      # 10. Upload AAB artifact
      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab-${{ github.sha }}
          path: android/app/build/outputs/bundle/release/app-release.aab
